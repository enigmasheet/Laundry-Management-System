@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="sidebar shadow-sm @SidebarStateClass @MobileSidebarClass">
    <h4 class="mb-4 text-center">LaundryApp</h4>
    <nav class="nav flex-column">
        <NavLink class="nav-link" href="" title="Home">
            <i class="bi bi-house-door-fill me-2"></i>
                <span>Home</span>
       
        </NavLink>
        <NavLink class="nav-link" href="counter" title="Counter">
            <i class="bi bi-plus-square-fill me-2"></i>
              
         
                <span>Counter</span>
            
        </NavLink>
        <NavLink class="nav-link" href="order" title="Order">
            <i class="bi bi-cart-fill me-2"></i>
            
                <span>Order</span>
            
        </NavLink>
        @if (IsAdmin)
        {
            <NavLink class="nav-link" href="admin" title="Admin">
                <i class="bi bi-shield-lock-fill me-2"></i>
              
                    <span>Admin</span>
            
            </NavLink>
        }
    </nav>

   
</div>


<style>
    /* Sidebar base */
    .sidebar {
        background: linear-gradient(135deg, #212529, #343a40);
        color: white;
        padding: 1rem;
        border-right: 1px solid rgba(255, 255, 255, 0.1);
        min-height: 100vh;
        transition: width 0.3s ease, padding 0.3s ease;
        width: 250px;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1030;
        overflow: hidden;
    }

   

    /* Nav links */
    .sidebar .nav-link {
        color: #ccc;
        padding: 0.75rem 1rem;
        border-radius: 8px;
        transition: background-color 0.2s ease;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        display: flex;
        align-items: center;
        position: relative;
    }

    /* Hide text when collapsed */
    .sidebar.collapsed .nav-link span {
        display: none;
    }

    /* Tooltip container for collapsed sidebar */
    .sidebar.collapsed .nav-link[title]:hover::after {
        content: attr(title);
        position: absolute;
        left: 70px;
        background: rgba(0,0,0,0.75);
        color: white;
        padding: 4px 8px;
        border-radius: 4px;
        white-space: nowrap;
        font-size: 0.85rem;
        pointer-events: none;
        top: 50%;
        transform: translateY(-50%);
        z-index: 1040;
    }

    /* Hover and active link */
    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
        background-color: rgba(255, 255, 255, 0.1);
        color: #fff;
    }

    /* Toggle buttons */
   
</style>

@code {
    public bool CollapseNavMenu { get; private set; } = false;
    private bool mobileSidebarVisible = false;

    private string SidebarStateClass => CollapseNavMenu ? "collapsed" : "";
    private string MobileSidebarClass => mobileSidebarVisible ? "mobile-visible" : "mobile-hidden";

    private bool IsAdmin;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            IsAdmin = user.IsInRole("Admin");
        }
    }

    private void ToggleNavMenu()
    {
        CollapseNavMenu = !CollapseNavMenu;
    }

    private void ToggleMobileSidebar()
    {
        mobileSidebarVisible = !mobileSidebarVisible;
    }
}
