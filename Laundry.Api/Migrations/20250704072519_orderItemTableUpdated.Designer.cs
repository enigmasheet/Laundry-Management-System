// <auto-generated />
using System;
using Laundry.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laundry.Api.Migrations
{
    [DbContext(typeof(LaundryDbContext))]
    [Migration("20250704072519_orderItemTableUpdated")]
    partial class orderItemTableUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Laundry.Api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CancelledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DropOffDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExpressCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpress")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PickupDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PickupType")
                        .HasColumnType("int");

                    b.Property<string>("SpecialInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("44444444-4444-4444-4444-444444444444"),
                            DeliveryDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryType = 0,
                            DiscountAmount = 0m,
                            ExpressCharge = 0m,
                            IsCancelled = false,
                            IsExpress = false,
                            PaymentMethod = 5,
                            PaymentStatus = 0,
                            PickupDate = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupType = 0,
                            Status = 2,
                            TaxAmount = 0m,
                            TotalAmount = 30.00m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("55555555-5555-5555-5555-555555555555"),
                            DeliveryType = 0,
                            DiscountAmount = 0m,
                            ExpressCharge = 0m,
                            IsCancelled = false,
                            IsExpress = false,
                            PaymentMethod = 5,
                            PaymentStatus = 0,
                            PickupDate = new DateTime(2025, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PickupType = 0,
                            Status = 0,
                            TaxAmount = 0m,
                            TotalAmount = 20.00m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Quantity = 3.0,
                            ServiceId = 1,
                            TotalPrice = 15.00m,
                            Unit = 1,
                            UnitPrice = 5.00m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            Quantity = 1.0,
                            ServiceId = 2,
                            TotalPrice = 15.00m,
                            Unit = 1,
                            UnitPrice = 15.00m
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            Quantity = 2.0,
                            ServiceId = 3,
                            TotalPrice = 20.00m,
                            Unit = 1,
                            UnitPrice = 10.00m
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.HasIndex("VendorId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Great service!",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Rating = 5,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Good but room for improvement.",
                            CreatedAt = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Rating = 4,
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Basic wash and fold service",
                            Name = "Wash & Fold",
                            Price = 5.00m,
                            Unit = 1,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Premium dry cleaning",
                            Name = "Dry Cleaning",
                            Price = 15.00m,
                            Unit = 2,
                            VendorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wash and iron clothes",
                            Name = "Wash & Iron",
                            Price = 10.00m,
                            Unit = 1,
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("VendorId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Email = "superadmin@laundry.com",
                            FullName = "Super Admin",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "SuperAdmin"
                        },
                        new
                        {
                            UserId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Email = "admin@sparklelaundry.com",
                            FullName = "Vendor Admin Sparkle",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "VendorAdmin",
                            VendorId = 1
                        },
                        new
                        {
                            UserId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Email = "employee1@sparklelaundry.com",
                            FullName = "Vendor Employee 1",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "Employee",
                            VendorId = 1
                        },
                        new
                        {
                            UserId = new Guid("33333533-3353-3355-3533-335333333333"),
                            Email = "employee2@FreshWash.com",
                            FullName = "Vendor Employee 2",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "Employee",
                            VendorId = 2
                        },
                        new
                        {
                            UserId = new Guid("44444444-4444-4444-4444-444444444444"),
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "Customer"
                        },
                        new
                        {
                            UserId = new Guid("55555555-5555-5555-5555-555555555555"),
                            Email = "jane.smith@example.com",
                            FullName = "Jane Smith",
                            IsActive = true,
                            PasswordHash = "$2a$11$wbiDSq0ImltzPEcBzbP/h.9Wl5Za3cwtxJbnTmh/h75rewphVaxhu",
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalReviews")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            AverageRating = 4.5,
                            Description = "Fast & reliable laundry service",
                            Email = "contact@sparklelaundry.com",
                            IsActive = true,
                            Latitude = 40.712800000000001,
                            Longitude = -74.006,
                            Name = "Sparkle Laundry",
                            Phone = "1234567890",
                            TotalReviews = 2
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            AverageRating = 4.7000000000000002,
                            Description = "Eco-friendly washing",
                            Email = "info@freshwash.com",
                            IsActive = true,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Name = "Fresh Wash",
                            Phone = "0987654321",
                            TotalReviews = 3
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.VendorInquiry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsResponded")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorInquiries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = new Guid("44444444-4444-4444-4444-444444444444"),
                            IsResponded = false,
                            Message = "Do you offer express service?",
                            SentAt = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = new Guid("55555555-5555-5555-5555-555555555555"),
                            IsResponded = false,
                            Message = "Can I schedule a pickup on weekends?",
                            SentAt = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("Laundry.Api.Models.Order", b =>
                {
                    b.HasOne("Laundry.Api.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laundry.Api.Models.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.HasOne("Laundry.Api.Models.Vendor", "Vendor")
                        .WithMany("Orders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Laundry.Api.Models.OrderItem", b =>
                {
                    b.HasOne("Laundry.Api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laundry.Api.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Laundry.Api.Models.Review", b =>
                {
                    b.HasOne("Laundry.Api.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laundry.Api.Models.Service", "Service")
                        .WithMany("Reviews")
                        .HasForeignKey("ServiceId");

                    b.HasOne("Laundry.Api.Models.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId");

                    b.HasOne("Laundry.Api.Models.Vendor", "Vendor")
                        .WithMany("Reviews")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Customer");

                    b.Navigation("Service");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Laundry.Api.Models.Service", b =>
                {
                    b.HasOne("Laundry.Api.Models.Vendor", "Vendor")
                        .WithMany("Services")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Laundry.Api.Models.User", b =>
                {
                    b.HasOne("Laundry.Api.Models.Vendor", "Vendor")
                        .WithMany("Users")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Laundry.Api.Models.VendorInquiry", b =>
                {
                    b.HasOne("Laundry.Api.Models.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laundry.Api.Models.Vendor", "Vendor")
                        .WithMany("Inquiries")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Laundry.Api.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Laundry.Api.Models.Service", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Laundry.Api.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Laundry.Api.Models.Vendor", b =>
                {
                    b.Navigation("Inquiries");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Services");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
